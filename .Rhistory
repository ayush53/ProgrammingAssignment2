x<-1
x
x<-1:29
print x
print(x)
x[20]
print(X)
print(x)
print(x[23])
x<-c(0.5)
x
x<-c(0.5,0.6)
x
x<-vector("logical",length=12)
x
x<-vector("logical= TRUE",length=12)
y<-(2,"a")
y<-c(2,"a")
y
x<-c(1,2,3)
as.character(x)
library(swirl)
swirl()
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patirnts<-c("Bill","Gina","Kelly,"Sean")
patients<-c("Bill","Gina","Kelly,"Sean")
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
x<-0
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
q()
q()
library(swirl)
swirl()
TRUE==TRUE
(FALSE==TRUE)==FALSE
6
6==7
6<7
10<=10
5!=7
!(5==7)
!5==7
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
install_from_swirl("Open Intro")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Data Analysis")
swirl()
q()
?solve
source(cachematrix.R)
getwd()
setwd("C://Users//Ayush//ProgrammingAssignment2")
source(cachematrix.R)
setwd("C://Users//Ayush//ProgrammingAssignment2")
source(cachematrix.R)
source('C:/Users/Ayush/ProgrammingAssignment2/cachematrix.R')
source(cachematrix.R)
source("cachematrix.R")
a<-makeCacheMatrix()
a
a<-matrix(1)
a
a<-matrix(2)
a
?matrix
matrix(2,nrow=2,ncol=2)
b<-matrix(2,nrow=2,ncol=2)
a<-makeCacheMatrix(b)
a
cacheSolve(x)
?$
source('C:/Users/Ayush/Desktop/one.R')
a<-makeVector()
a
a$set(c(1,2))
a$setmean(
a$setmean()
a$getmean()
cachemean(x)
cachemean(c(1,2))
cachemean(
cachemean()
cachemean(a)
bigVec<-makeVector(1:100)
biggerVec<-makeVector(1:10000)
cachemean(bigvec)
cachemean(bigVec)
cachemean(bigVec)
source('C:/Users/Ayush/ProgrammingAssignment2/cachematrix.R')
bigmat<-makeCachematrix(2,4,4)
bigmat<-makeCacheMatrix(2,4,4)
bigmat<-makeCacheMatrix(matrix(2,10,10))
cacheSolve(bigmat)
bigmat$set
bigmat$set()
bigmat$get()
source('C:/Users/Ayush/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Ayush/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Ayush/ProgrammingAssignment2/cachematrix.R')
